#Использовать 1connector

Перем ДистрибутивыПодUbuntu;
Перем ОбратнаяМатрицаВерсийPG;

АктуальныйLTSUbuntu = "18.04";
СобираемыеТеги = Новый Массив();

ТегиИсключенияНеВходящиеВПолнуюСборку = Новый Массив();
ТегиИсключенияНеВходящиеВПолнуюСборку.Добавить("11.1"); //баг в имени пакета у PostgreSQLPro

МетаданныеХранилищаДистрибутивов = КоннекторHTTP.Get("http://repo.postgrespro.ru/1c-archive/meta.json").Json();

Для каждого ДистрибутивыPGPro Из МетаданныеХранилищаДистрибутивов Цикл
	
	Если ДистрибутивыPGPro.Ключ = "linux" Тогда
		Для Каждого ДистрибутивПодLinux Из  ДистрибутивыPGPro.Значение Цикл
			//Сообщить("Имеющиеся платформы *nix: " + ДистрибутивПодLinux.Ключ);
			Если ДистрибутивПодLinux.Ключ = "ubuntu" Тогда
				ДистрибутивыПодUbuntu = ДистрибутивПодLinux.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли

КонецЦикла;

ОбратнаяМатрицаВерсийPG = Новый Соответствие();

Если ЗначениеЗаполнено(ДистрибутивыПодUbuntu) Тогда
	Для Каждого ДистрибутивПодUbuntu Из ДистрибутивыПодUbuntu Цикл
		Для каждого АрхитектураПроцессора из ДистрибутивПодUbuntu.Значение Цикл
			Для Каждого ВерсииPG из АрхитектураПроцессора.Значение Цикл
				Для Каждого Версия Из ВерсииPG Цикл
					Если Версия.Ключ = "version" Тогда
						//PostgreSQL Pro иногда выпускает обновления под свои нужны
						//добавляя номер в конце версии - фактически это хотфикс
						НомераВерсий = СтрРазделить(Версия.Значение,".");
						РедакцияИВерсия = НомераВерсий[0] + "." + НомераВерсий[1];
						
						Если РедакцияИВерсия <> Версия.Значение Тогда
							Сообщить("ВНИМАНИЕ: обнаружен хотфикс " + Версия.Значение);
						КонецЕсли;

						ЗначениеОбратнойМатрицы = ОбратнаяМатрицаВерсийPG.Получить(РедакцияИВерсия);
						Если ЗначениеОбратнойМатрицы = Неопределено Тогда
							ОбратнаяМатрицаВерсийPG.Вставить(РедакцияИВерсия, Новый Массив());
							ЗначениеОбратнойМатрицы = ОбратнаяМатрицаВерсийPG[РедакцияИВерсия];
						КонецЕсли;
						ЗначениеОбратнойМатрицы.Добавить(ДистрибутивПодUbuntu.Ключ);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
Иначе
	ВызватьИсключение "Не могу получить список дистрибутивов под Ubuntu";
КонецЕсли;

// на сегодня это 18-04 ;-) 18.04.4 Ubuntu Server 18.04.4 LTS

Для Каждого ВерсияСобраннаяПодДистрибутив Из ОбратнаяМатрицаВерсийPG Цикл
	Сообщить("Версия " + ВерсияСобраннаяПодДистрибутив.Ключ + " собрана под " + ВерсияСобраннаяПодДистрибутив.Значение.Количество() + " разных версий Ubuntu");
	Сообщить("    а именно " + СтрСоединить(ВерсияСобраннаяПодДистрибутив.Значение,",") + " в порядке даты пересоборки");
	НашлиLTS = ВерсияСобраннаяПодДистрибутив.Значение.Найти(АктуальныйLTSUbuntu);
	Если ЗначениеЗаполнено(НашлиLTS) Тогда
		СобираемыеТеги.Добавить(ВерсияСобраннаяПодДистрибутив.Ключ);
	Иначе
		Сообщить("ВНИМАНИЕ: версию " + ВерсияСобраннаяПодДистрибутив.Ключ + " нельзя собрать под последний Ubuntu LTS " + АктуальныйLTSUbuntu);
	КонецЕсли;

КонецЦикла;

СписокТегов = Новый СписокЗначений();
СписокТегов.ЗагрузитьЗначения(СобираемыеТеги);
СписокТегов.СортироватьПоЗначению();

Сообщить("Сборка будет осуществляться под следующие версии " + СтрСоединить(СписокТегов.ВыгрузитьЗначения(),","));

Сообщить("Генерируем скрипты сборки");

путьСкриптаТегов = ОбъединитьПути("image", "ubuntu", "full-build-" + АктуальныйLTSUbuntu + ".sh");
путьСкриптаПолнойПересборки = Новый ЗаписьТекста(путьСкриптаТегов);

путьСкриптаПолнойПересборки.Записать("#!/bin/bash
|
|"
);

путьСкриптаОтравки = ОбъединитьПути("image", "ubuntu", "full-pusher-" + АктуальныйLTSUbuntu + ".sh");
путьСкриптаПолнойОтправки = Новый ЗаписьТекста(путьСкриптаОтравки);

путьСкриптаПолнойОтправки.Записать("#!/bin/bash
|
|"
);

Для Каждого ЭлементТега из СписокТегов Цикл
	Тег = ЭлементТега.Значение;
	Редакция = СтрРазделить(Тег,".")[0];
	ИмяОтдельногоСкрипта = "build-" + Тег + "-" + АктуальныйLTSUbuntu + ".sh";
	имяФайлаОтдельногоСкрипта = ОбъединитьПути("image", "ubuntu", ИмяОтдельногоСкрипта);
	записьСкриптаСборки = Новый ЗаписьТекста(имяФайлаОтдельногоСкрипта);
	ТекстСкриптаСборки = "#!/bin/bash
	| 
	|docker build --build-arg pgtag=" + Тег + " --build-arg pgversion=1c-" + Редакция + " --tag=silverbulleters/ya-docker-postgresql-1c:" + Тег + " ./" + АктуальныйLTSUbuntu + "
	|";
	записьСкриптаСборки.Записать(ТекстСкриптаСборки);
	записьСкриптаСборки.Закрыть();

	ЗначениеНайденоВИсключениях = ТегиИсключенияНеВходящиеВПолнуюСборку.Найти(""+Тег);
	Если ЗначениеНайденоВИсключениях = 0 Тогда
		Сообщить("ВНИМАНИЕ: Тег " + Тег + " исключен из полной сборки - смотри документацию о причине
		| сам скрипт сборки для " + ИмяОтдельногоСкрипта);
		Продолжить;
	КонецЕсли;

	путьСкриптаПолнойПересборки.Записать(" sh ./" + ИмяОтдельногоСкрипта + "
	|
	|");

	путьСкриптаПолнойОтправки.Записать("
	|
	|docker push silverbulleters/ya-docker-postgresql-1c:" + Тег + "
	|
	|");

КонецЦикла;

путьСкриптаПоследнейАктуальной = ОбъединитьПути("image", "ubuntu", "latest-build-" + АктуальныйLTSUbuntu + ".sh");
последнийАктуальныйСкрипт = Новый ЗаписьТекста(путьСкриптаПоследнейАктуальной);
последнийАктуальныйСкрипт.Записать(ТекстСкриптаСборки); //мы же отсортировали правда ?
последнийАктуальныйСкрипт.Закрыть();

путьСкриптаПолнойОтправки.Записать("
|	
|docker tag silverbulleters/ya-docker-postgresql-1c:" + Тег + " silverbulleters/ya-docker-postgresql-1c:latest
|docker push silverbulleters/ya-docker-postgresql-1c:latest
|
|");

путьСкриптаПолнойПересборки.Закрыть();
путьСкриптаПолнойОтправки.Закрыть();
